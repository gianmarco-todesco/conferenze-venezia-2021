OpenShadingLanguage 1.00
# Compiled by oslc 1.10.10
# options: -o C:\Users\GMT\Documents\conferenze\venezia2021\conferenze-venezia-2021\menger\menger_shader_2.oso -IC:\Program Files\Blender Foundation\Blender 2.92\2.92\scripts\addons\cycles\shader
shader menger_shader
param	float	size	4		%read{1,11} %write{2147483647,-1}
oparam	float	Alpha	0.5		%read{2147483647,-1} %write{18,48}
global	point	P	%read{0,8} %write{2147483647,-1}
local	float	___363_x	%read{18,47} %write{13,47}
local	float	___363_y	%read{18,47} %write{14,47}
local	float	___363_z	%read{18,47} %write{15,47}
local	float	___363_p	%read{18,47} %write{18,47}
local	int	___363_c	%read{18,47} %write{18,47}
local	int	___364_i	%read{18,47} %write{17,47}
local	float	x	%read{13,13} %write{3,3}
local	float	y	%read{14,14} %write{7,7}
local	float	z	%read{15,15} %write{11,11}
const	int	$const1	0		%read{0,20} %write{2147483647,-1}
temp	float	$tmp1	%read{2,2} %write{0,0}
const	float	$const2	0.5		%read{1,9} %write{2147483647,-1}
temp	float	$tmp2	%read{2,2} %write{1,1}
temp	float	$tmp3	%read{3,3} %write{2,2}
const	int	$const3	1		%read{4,47} %write{2147483647,-1}
temp	float	$tmp4	%read{6,6} %write{4,4}
temp	float	$tmp5	%read{6,6} %write{5,5}
temp	float	$tmp6	%read{7,7} %write{6,6}
const	int	$const4	2		%read{8,42} %write{2147483647,-1}
temp	float	$tmp7	%read{10,10} %write{8,8}
temp	float	$tmp8	%read{10,10} %write{9,9}
temp	float	$tmp9	%read{11,11} %write{10,10}
const	string	$const5	"menger"		%read{12,12} %write{2147483647,-1}
const	float	$const6	3		%read{13,37} %write{2147483647,-1}
const	int	$const7	5		%read{18,18} %write{2147483647,-1}
temp	int	$tmp10	%read{18,47} %write{18,47}
temp	int	$tmp11	%read{16,47} %write{17,47}
temp	float	$tmp12	%read{18,47} %write{18,47}
const	float	$const8	1		%read{24,48} %write{2147483647,-1}
temp	int	$tmp13	%read{18,47} %write{18,47}
temp	int	$tmp14	%read{2147483647,-1} %write{18,47}
temp	float	$tmp15	%read{18,47} %write{18,47}
temp	int	$tmp16	%read{18,47} %write{18,47}
temp	int	$tmp17	%read{2147483647,-1} %write{18,47}
temp	float	$tmp18	%read{18,47} %write{18,47}
temp	int	$tmp19	%read{18,47} %write{18,47}
temp	int	$tmp20	%read{2147483647,-1} %write{18,47}
temp	int	$tmp21	%read{18,47} %write{18,47}
const	float	$const9	0		%read{44,44} %write{2147483647,-1}
temp	int	$tmp22	%read{2147483647,-1} %write{18,47}
code ___main___
# menger_shader_2.osl:31
#     float y = (P[1]+0.5*size)/size;
	compref		$tmp1 P $const1 	%filename{"menger_shader_2.osl"} %line{31} %argrw{"wrr"}
	mul		$tmp2 $const2 size 	%argrw{"wrr"}
	add		$tmp3 $tmp1 $tmp2 	%argrw{"wrr"}
	div		x $tmp3 size 	%argrw{"wrr"}
# menger_shader_2.osl:32
#     float z = (P[2]+0.5*size)/size;
	compref		$tmp4 P $const3 	%line{32} %argrw{"wrr"}
	mul		$tmp5 $const2 size 	%argrw{"wrr"}
	add		$tmp6 $tmp4 $tmp5 	%argrw{"wrr"}
	div		y $tmp6 size 	%argrw{"wrr"}
# menger_shader_2.osl:33
#     
	compref		$tmp7 P $const4 	%line{33} %argrw{"wrr"}
	mul		$tmp8 $const2 size 	%argrw{"wrr"}
	add		$tmp9 $tmp7 $tmp8 	%argrw{"wrr"}
	div		z $tmp9 size 	%argrw{"wrr"}
# menger_shader_2.osl:35
# }
	functioncall	$const5 49 	%line{35} %argrw{"r"}
# menger_shader_2.osl:4
#     float y = iy * 3.0;
	mul		___363_x x $const6 	%line{4} %argrw{"wrr"}
# menger_shader_2.osl:5
#     float z = iz * 3.0;
	mul		___363_y y $const6 	%line{5} %argrw{"wrr"}
# menger_shader_2.osl:6
#     
	mul		___363_z z $const6 	%line{6} %argrw{"wrr"}
# menger_shader_2.osl:11
#     {
	for		$tmp11 18 20 46 48 	%line{11} %argrw{"r"}
	assign		___364_i $const1 	%argrw{"wr"}
	lt		$tmp10 ___364_i $const7 	%argrw{"wrr"}
	neq		$tmp11 $tmp10 $const1 	%argrw{"wrr"}
# menger_shader_2.osl:14
#         p = floor(x); x = 3.0*(x-p); if(p==1.0) c++;
	assign		___363_c $const1 	%line{14} %argrw{"wr"}
# menger_shader_2.osl:15
#         p = floor(y); y = 3.0*(y-p); if(p==1.0) c++;
	floor		___363_p ___363_x 	%line{15} %argrw{"wr"}
	sub		$tmp12 ___363_x ___363_p 	%argrw{"wrr"}
	mul		___363_x $const6 $tmp12 	%argrw{"wrr"}
	eq		$tmp13 ___363_p $const8 	%argrw{"wrr"}
	if		$tmp13 28 28 	%argrw{"r"}
	assign		$tmp14 ___363_c 	%argrw{"wr"}
	add		___363_c ___363_c $const3 	%argrw{"wrr"}
# menger_shader_2.osl:16
#         p = floor(z); z = 3.0*(z-p); if(p==1.0) c++;
	floor		___363_p ___363_y 	%line{16} %argrw{"wr"}
	sub		$tmp15 ___363_y ___363_p 	%argrw{"wrr"}
	mul		___363_y $const6 $tmp15 	%argrw{"wrr"}
	eq		$tmp16 ___363_p $const8 	%argrw{"wrr"}
	if		$tmp16 35 35 	%argrw{"r"}
	assign		$tmp17 ___363_c 	%argrw{"wr"}
	add		___363_c ___363_c $const3 	%argrw{"wrr"}
# menger_shader_2.osl:17
#     
	floor		___363_p ___363_z 	%line{17} %argrw{"wr"}
	sub		$tmp18 ___363_z ___363_p 	%argrw{"wrr"}
	mul		___363_z $const6 $tmp18 	%argrw{"wrr"}
	eq		$tmp19 ___363_p $const8 	%argrw{"wrr"}
	if		$tmp19 42 42 	%argrw{"r"}
	assign		$tmp20 ___363_c 	%argrw{"wr"}
	add		___363_c ___363_c $const3 	%argrw{"wrr"}
# menger_shader_2.osl:19
#     }
	ge		$tmp21 ___363_c $const4 	%line{19} %argrw{"wrr"}
	if		$tmp21 46 46 	%argrw{"r"}
	assign		Alpha $const9 	%argrw{"wr"}
	return
# menger_shader_2.osl:11
#     {
	assign		$tmp22 ___364_i 	%line{11} %argrw{"wr"}
	add		___364_i ___364_i $const3 	%argrw{"wrr"}
# menger_shader_2.osl:23
# 
	assign		Alpha $const8 	%line{23} %argrw{"wr"}
	end
